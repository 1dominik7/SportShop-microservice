spring:
  datasource:
    url: jdbc:postgresql://${POSTGRES_URL_HOST}:${POSTGRES_URL_PORT}/${POSTGRES_NAME}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        database: order
      database-platform: org.hibernate.dialect.PostgreSQLDialect
  zipkin:
    base-url: http://zipkin:9411
    enabled: true
    sender:
      type: web
  sleuth:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    prometheus:
      enabled: true
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  tracing:
    sampling:
      probability: 1.0

server:
  port: 8084
  servlet:
    context-path: /api/v1

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URL}
    register-with-eureka: true
    fetch-registry: true

logging:
  file:
    name: logs/${spring.application.name}.log
  logback:
    rollingpolicy:
      max-file-size: 5MB
      max-history: 7
  level:
    org.springframework.boot.autoconfigure.jdbc: DEBUG
    org.springframework.cloud.openfeign: DEBUG
    feign: DEBUG

resilience4j:
  circuitbreaker:
    instances:
      userService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        automaticTransitionFromOpenToHalfOpenEnabled: true
        slidingWindowType: count_based
      productService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        automaticTransitionFromOpenToHalfOpenEnabled: true
        slidingWindowType: count_based
  ratelimiter:
    instances:
      userService:
        timeout-duration: 500ms
        limit-refresh-period: 1s
        limit-for-period: 10
      productService:
        timeout-duration: 0s
        limit-refresh-period: 4s
        limit-for-period: 2
  retry:
    instances:
      retryBreaker:
        maxAttempts: 5
        waitDuration: 500ms

keycloak:
  admin:
    username: ${KEYCLOAK_USERNAME}
    password: ${KEYCLOAK_PASSWORD}
    server-url: ${KEYCLOAK_URL}
    realm: ${KEYCLOAK_REALM}
    client-id: ${KEYCLOAK_CLIENT_ID}
    client-uid: ${KEYCLOAK_CLIENT_UID}
    client-secret: ${KEYCLOAK_CLIENT_SECRET}

feign:
  client:
    config:
      user-service:
        url: ${USER_SERVICE_URL:http://localhost:8082/api/v1}
      product-service:
        url: ${PRODUCT_SERVICE_URL:http://localhost:8083/api/v1}